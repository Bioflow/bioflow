require 'iofiles/bam_files_list'

class FormCreator

  def create_form(workflowitemId , widgetId, workflowObj)
    
    
    ap "Creating form for"
    ap workflowitemId
    ap widgetId
    ap workflowObj
    ap "WAS IT NIL"
    
    
    unless workflowObj.nil?
        htmlStr = ""
        
        id_local = workflowitemId +"__"+ widgetId
        htmlStr_start = "<h3  id='" + id_local +"__header'"  + "class='eastaccordionheader'><a href='#'>"+workflowObj.name+"</a></h3>
                        <div  class='eastaccordioncontent' id='" + workflowitemId +"__"+ widgetId +"__div'" + ">
                            <div   style='width:100%;overflow:hidden'>
                              <form id='"  + workflowitemId +"__"+ widgetId+"'>"
                              
                              
        htmlStr_end = "<button type='button' name='submit' id='"  + workflowitemId +"__"+ widgetId +"__submit'" + "
                                    onClick=submitForm('"  + id_local+"')
                                    value=\"Submit\" >Submit
                                  </button>
                                  </form>
                            </div>
                        </div>"
        
        
      
        form_params = workflowObj.form_params
        ap "Need to create form for this"
        ap form_params
        
        number_of_outputs = workflowObj.outputs.length
        
        for i in 0..number_of_outputs-1
          
            output_name = "output_"+i.to_s
            output_value = ""
            output_file_name_inform = ""
          
            #BAD BAD !!
          
            for j in 0..number_of_outputs-1
                if workflowObj.outputs[j].output_identifier == output_name
                  # found that guy
                  if workflowObj.outputs[j].output_file_name != nil
                      output_file_name_inform = workflowObj.outputs[j].output_file_name         
                  end
                end
            end
          
            if output_file_name_inform != ""
                htmlStr   += "<label > Output Filename (Optional) </label> : <input type='text' name='output_"+i.to_s+"' placeHolder = '<autogenerated> ' value='"+output_file_name_inform+"'><br>"
            else 
              htmlStr   += "<label > Output Filename (Optional) </label> : <input type='text' name='output_"+i.to_s+"' placeHolder = '<autogenerated> ' ><br>"
            end
          
          
        end
           
     
        
        
        for param in form_params
              
              if param.param_type == "bamfile"
                        files_list = BamFilesList.new
                        #files_list.init()
                        htmlStr = create_form_for_input(param, files_list, htmlStr, "BAM")
              elsif param.param_type == "samfile"
                        files_list = SamFilesList.new
                        htmlStr = create_form_for_input(param, files_list, htmlStr, "SAM")
              elsif param.param_type == "fastafile"
                        files_list = FastaFilesList.new()
                        htmlStr = create_form_for_input(param, files_list, htmlStr, "FASTA")
              elsif param.param_type == "fastqfile"
                        files_list = FastqFilesList.new()
                        htmlStr = create_form_for_input(param, files_list, htmlStr, "FASTQ")
              elsif param.param_type == "gzippedfile"
                        files_list = GzippedFilesList.new()
                        htmlStr = create_form_for_input(param, files_list, htmlStr, "GZIPPED")
              elsif param.param_type == "otherfile"
                        files_list = FilesList.new()
                        htmlStr = create_form_for_input(param, files_list, htmlStr, "OTHERFILE")
              elsif param.param_type == "other"
                        htmlStr = create_input_field(param, htmlStr, "OTHER")
              end 
                          
       end
      
      return htmlStr_start + htmlStr + htmlStr_end
    
  end
  end
   
    
    
    
   
    
    
    

    def create_input_field(param, htmlStr, filetype)
          
          pre_selected = ""
          label = param.input_identifier
          if param.param_label != nil
              label = param.param_label
          end 
          if param.param_value != nil
               pre_selected =  param.param_value
          end  
                            
          htmlStr = htmlStr + "<label style='width:150px;display:inline-block;' >" + label + " </label>: <br>" + 
                          " <input type='text' name='"+  param.input_identifier+ "'   value='"+pre_selected+"'><br>"
            
              
          return htmlStr
    end
    
    def create_form_for_input (param,files_list, htmlStr, filetype)
                    ap "INSIDE create_form_for_input"
                    
                    ap param
                    ap files_list
                    select_message = "Select the input "+filetype+" file "
                    if param.param_label != nil
                      select_message = param.param_label
                    end
                    
                    htmlStr = htmlStr + select_message + "<br>" +
                                "<select name=" + param.input_identifier + "  >" +
                                "<option value='' disabled='disabled'  selected>" + 'Select '+filetype+' File'+"</option>"
                       ap "half html str is"
                       ap htmlStr         
                                for each_file in files_list.get_files()
                                    
                                    pre_selected =  ""
                                    if param.param_value != nil
                                       pre_selected =  param.param_value
                                    end     
                                    if each_file.eql? pre_selected 
                                          htmlStr = htmlStr + "<option selected=\"selected\">" + each_file+"</option>"
                                    else
                                    
                                          htmlStr = htmlStr + "<option>" + each_file+"</option>"
                                      
                                    end
                                    
                                    
                                 end
                                 
                      htmlStr = htmlStr +  "</select>"
                      ap "FUll htmlstr is"
                      ap htmlStr
                      return htmlStr
    end
    


  def create_form_for_job(job_id , job)
    
      job_name = ""
      if !job.nil?
         job_name = job.jobname
      end
         
      html_str  =  "<form style='width:300px' id='job_name_"+job_id +"'>
                        Job Details<br>
                        <label style='width:80px;display:inline-block;' >Job Name </label> : <input type='text' name='job_name' placeHolder = '"+ job_id +"' value='"+job_name+"'><br>
                        <label style='width:80px;display:inline-block;'>Job Summary  </label> : <input type='text' name='job_summary' placeholder='<summary>'  value=''><br>
                        
                        <button type='button' name='submit' id='job_name_" +job_id+  "__submit'" + "onClick=submitForm('job_name_"  + job_id +"')
                          value=\"Submit\" >Submit
                        </button>
                              <br>
                    </form>"
  
      return html_str
  end
  
end



